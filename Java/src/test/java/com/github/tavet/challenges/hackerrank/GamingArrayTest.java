package com.github.tavet.challenges.hackerrank;

import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class GamingArrayTest {
    GamingArray gamingArray;

    @BeforeEach
    void setUp() {
        gamingArray = new GamingArray();
    }

    @Test
    void testCase1() {
        final String expected = "ANDY";
        List<Integer> list = Arrays.asList(48603, 39761, 92458, 97315, 22399, 95568, 39876, 22840, 55717, 80972, 55278,
                86905, 65466, 95977, 38341, 57720, 83835, 84014, 12235, 96900, 60173, 33471, 44821, 76899, 53668, 43062,
                38962, 25840, 71424, 13227, 30027, 30767, 35937, 94062, 63792, 15521, 6670, 33022, 59834, 43226, 99586,
                98674, 51475, 14895, 30208, 27006, 92901, 15182, 57760, 31164, 44991, 9370, 83099, 86811, 92128, 74625,
                19528, 71580, 3576, 21442, 9062, 10094, 72777, 84136, 45820, 64720, 74064, 26713, 36019, 21694, 47954,
                27982, 87650);

        assertEquals(expected, gamingArray.gamingArray(list));
    }

    @Test
    void testCase2() {
        final String expected = "ANDY";
        List<Integer> list = Arrays.asList(55440, 49362, 22951, 78763, 94771, 22656, 20185, 52241, 3153, 89467, 85851,
                58963, 75623, 18812, 17601, 8510, 96645, 6797, 10324, 81454, 95560, 404, 14774, 81315, 36255, 16732,
                2045, 58864, 95757, 88522, 42232, 71568, 56488, 68935, 60613, 19698, 38360, 51248, 23708, 55565, 38732,
                54943, 7934, 28122, 92863, 62279, 46205, 58693, 58282, 40594, 1552, 64366, 87064, 96812, 19834, 33762,
                12608, 8807, 66538, 27399, 78100, 95735, 7549, 43236, 35618, 29933, 49525, 99124, 15640, 78824, 54574,
                26640, 72720, 52830, 52476, 58108, 11012, 11143, 88775, 18963, 76339, 91691, 2758, 90033, 44147, 21634,
                42049, 52875, 9758, 92439, 76926, 81329, 72520, 43639, 3807, 45760, 78545, 38031, 33055, 72977, 47275,
                20042, 38763, 48516, 50047, 41126, 21217, 31546, 16363, 60827, 23145, 69107, 77361, 78788, 6857, 34962,
                2527, 77555, 58332, 16660, 53211, 28123, 78334, 45781, 83748, 72077, 97685, 6482, 90280, 28855, 78636,
                28022, 26378, 88809, 20287, 60098, 63207, 27903, 46166, 77956, 4441, 75860, 57143, 43407, 58476, 30340,
                36055, 53391, 9133, 58837, 32279, 96033, 82858, 28717, 68151, 75693, 75659, 57593, 11702, 28951, 82831,
                70917, 66923, 92853, 64536, 15702, 85618, 165, 79627, 73715, 87237, 25121, 83583, 69722, 31554, 10179,
                67735, 6943, 56308, 44071, 54942, 31886, 35071, 78859, 69326, 62502, 21764, 73040, 77078, 95532, 58065,
                94392, 58851, 53952, 85821, 14577, 45016, 24404, 47435, 88112, 26816, 90672, 24283, 98224, 59873, 33990,
                92405, 62689, 1152, 29372, 72760, 91753, 66868, 44738, 65028, 81686, 60942, 73801, 94545, 40043, 17913,
                86680, 33929, 54032, 52609, 5898, 75369, 53086, 98439, 22799, 79220, 10339, 40232, 25048, 73301, 54697,
                51809, 14519, 53313, 50751, 25932, 39874, 25074, 24947, 34276, 25261, 79742, 15783, 31633, 26506, 81865,
                79603, 87923, 74027, 85164, 83862, 4626, 4838, 50265, 86608, 46801, 41370, 21004, 26220, 4345, 49837,
                63877, 99032, 17827, 83757, 76480, 84743, 7923, 62697, 66641, 9311, 5554, 8015, 20084, 34534, 17118,
                78423, 5136, 46732, 90579, 18850, 23870, 96419, 38659, 20416, 81010, 99290, 60371, 57148, 25689, 61994,
                79622, 44086, 15127, 39094, 13108, 33532, 42608, 77712, 9158, 80115, 82246, 59102, 30587, 15123, 27434,
                26320, 21791, 12643, 13319, 39269, 75605, 79383, 75460, 20153, 35913, 92066, 32578, 5234, 22046, 5349,
                48968, 12147, 24586, 99899, 34651, 74588, 39355, 4972, 81234, 95494, 90782, 27195, 22997, 50196, 61639,
                23313, 44166, 22247, 94963, 88306, 57555, 37323, 50540, 83320, 81512, 30442, 99773, 8676, 68048, 13333,
                57972, 44212, 2755, 69684, 21743, 20306, 64411, 97197, 11047, 65056, 86824, 13726, 18577, 92387, 35023,
                994, 7526, 6364, 63055, 42702, 56704, 98112, 42286, 81787, 81905, 99769, 83512, 73442, 85190, 29266,
                56127, 97306, 57439, 77376, 13309, 65402, 69397, 20252, 99004, 61288, 92449, 94233, 86603, 95801, 98646,
                30974, 72370, 14798, 68790, 46723, 47078, 84611, 49514, 74239, 10442, 98285, 88567, 60778, 53826, 58527,
                45728, 10334, 83822, 48945, 87013, 18799, 85892, 95865, 45310, 87461, 48464, 78298, 28021, 76390, 9134,
                51602, 20209, 52061, 6828, 96702, 79489, 24919, 68155, 72046, 59374, 10000, 22672);

        assertEquals(expected, gamingArray.gamingArray(list));
    }
}
